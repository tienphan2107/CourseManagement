/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.coursemanagement.GUI.Student;

import com.mycompany.coursemanagement.BUS.PersonBUS;
import com.mycompany.coursemanagement.Models.Person;
import java.awt.Color;
import java.sql.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class PnStudent extends javax.swing.JPanel {

    private PersonBUS personBus = new PersonBUS();
    private List<Person> list;

    AddStudent addFrame;
    EditStudent editFrame;
    StudentDetails detailFrame;

    /**
     * Creates new form pnSinhVien
     */
    public PnStudent() {
        initComponents();
        this.setSize(885, 515);
        SetUpTable();
        Resetpanel();
    }

    public void Resetpanel() {
        GetAllList();
        txtFindContent.setText("");
        LoadStudent(list);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        txtFindContent = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnReload = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));
        setPreferredSize(new java.awt.Dimension(885, 515));

        jPanel1.setPreferredSize(new java.awt.Dimension(880, 510));

        tblStudent.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "#", "Student ID", "First Name", "Last Name", "Enrollment Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStudent);
        if (tblStudent.getColumnModel().getColumnCount() > 0) {
            tblStudent.getColumnModel().getColumn(0).setMinWidth(1);
            tblStudent.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblStudent.getColumnModel().getColumn(1).setMinWidth(1);
            tblStudent.getColumnModel().getColumn(1).setPreferredWidth(1);
        }

        btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Search.png"))); // NOI18N
        btnFind.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Delete-file.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Edit-file.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Add-file.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/File-details.png"))); // NOI18N
        btnView.setText("View");
        btnView.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnReload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Refresh.png"))); // NOI18N
        btnReload.setText("Reload");
        btnReload.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtFindContent, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(btnReload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFindContent)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        if (txtFindContent.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Please type something in the TextBox first.", "Message", JOptionPane.ERROR_MESSAGE);
            txtFindContent.setText("");
            txtFindContent.requestFocus();
            return;
        }
        try {
            List<Person> result = personBus.FindStudent(txtFindContent.getText());
            System.out.println("Abc:" + result.size());
            LoadStudent(result);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured when finding a suitable content, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            return;
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (tblStudent.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Please choose ONE student to delete", "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int choose = JOptionPane.showConfirmDialog(this, "Delete this student ?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (choose == JOptionPane.YES_OPTION) { // đổi ý không xóa nữa
            int studentID = Integer.parseInt(tblStudent.getModel().getValueAt(tblStudent.getSelectedRow(), 1).toString());
            try {
                boolean result = personBus.DeleteStudent(studentID);
                if (result == true) {
                    JOptionPane.showMessageDialog(this, "Delete student success !", "Notification", JOptionPane.ERROR_MESSAGE);
                    btnReloadActionPerformed(evt);
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "There is one or many references that relate to the student you wanted to delete that exist.\n You CAN'T delete this student without deleting that references first !", "Error", JOptionPane.ERROR_MESSAGE);
                    btnReloadActionPerformed(evt);
                    return;
                }
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "An error occured when Deleting Data in Database, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }else{
            return;
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (tblStudent.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Please choose ONE Student", "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int studentID = Integer.parseInt(tblStudent.getModel().getValueAt(tblStudent.getSelectedRow(), 1).toString());
        if (editFrame != null) {
            editFrame.dispose();
        }
        editFrame = new EditStudent(studentID);
        editFrame.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (addFrame != null) {
            addFrame.dispose();
        }
        addFrame = new AddStudent();
        addFrame.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        if (tblStudent.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Please choose ONE student to see the detail", "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int studentID = Integer.parseInt(tblStudent.getModel().getValueAt(tblStudent.getSelectedRow(), 1).toString());
        if (detailFrame != null) {
            detailFrame.dispose();
        }
        detailFrame = new StudentDetails(studentID);
        detailFrame.setVisible(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        Resetpanel();
    }//GEN-LAST:event_btnReloadActionPerformed
    public void SetUpTable() {
        for (int i = 0; i < tblStudent.getColumnCount(); i++) {
            tblStudent.getColumnModel().getColumn(i).setCellRenderer(new LeftAlignedCellRenderer());
        }
        tblStudent.getTableHeader().setReorderingAllowed(false);
    }

    public void GetAllList() {
        try {
            this.list = personBus.GetAllStudent();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured when Get Data in Database, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            return;
        }
    }

    public void LoadStudent(List<Person> list) {
        if (list == null || list.isEmpty()) {
            JOptionPane.showMessageDialog(this, "There are no Student to be show !");
            return;
        }
        DefaultTableModel tableModel = (DefaultTableModel) tblStudent.getModel();
        tableModel.setRowCount(0);
        int stt = 1;
        try {
            for (Person student : list) {
                tableModel.addRow(new Object[]{stt++, student.getPersonID(), student.getFirstName(), student.getLastName(), student.getEnrollmentDate()});
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured when Load Data to GUI, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            tableModel.setRowCount(0);
            return;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnView;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextField txtFindContent;
    // End of variables declaration//GEN-END:variables
}

class LeftAlignedCellRenderer extends DefaultTableCellRenderer {

    public LeftAlignedCellRenderer() {
        setHorizontalAlignment(SwingConstants.LEFT); // Đặt căn chỉnh sang trái
    }
}
