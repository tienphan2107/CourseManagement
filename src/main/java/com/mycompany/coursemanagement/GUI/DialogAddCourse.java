package com.mycompany.coursemanagement.GUI;

import com.mycompany.coursemanagement.BUS.OnlineCourseBUS;
import com.mycompany.coursemanagement.BUS.OnsiteCourseBUS;
import com.mycompany.coursemanagement.Models.Department;
import helper.EmptyFieldException;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class DialogAddCourse extends javax.swing.JDialog {

    private final OnlineCourseBUS onlineCourseBUS = new OnlineCourseBUS();
    private final OnsiteCourseBUS onsiteCourseBUS = new OnsiteCourseBUS();
    private final String CB_VALUE_ONLINE_COURSE = "Online course";
    private final String CB_VALUE_ONSITE_COURSE = "Onsite course";
    private JPanel parent;
    private CardLayout layout;

    private DialogAddCourse(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public DialogAddCourse(JPanel parent, java.awt.Frame owner, boolean modal) {
        super(owner, modal);
        initComponents();
        setLocationRelativeTo(null);
        setModelComboBox();
        enableAllInputs();
        this.parent = parent;
        this.layout = (CardLayout) pMain.getLayout();
    }

    private void setModelComboBox() {
        cbCourseType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{CB_VALUE_ONLINE_COURSE, CB_VALUE_ONSITE_COURSE}));
        cbCourseType.setSelectedIndex(0);
    }

    private void enableAllInputs() {
        pOnlineCourse.getTxtCourseId().setEditable(true);
        pOnlineCourse.getTxtTitle().setEditable(true);
        pOnlineCourse.getTxtCredits().setEditable(true);
        pOnlineCourse.getBtnChooseDepartment().setEnabled(true);
        pOnlineCourse.getTxtUrl().setEditable(true);

        pOnsiteCourse.getTxtCourseId().setEditable(true);
        pOnsiteCourse.getTxtTitle().setEditable(true);
        pOnsiteCourse.getTxtCredits().setEditable(true);
        pOnsiteCourse.getBtnChooseDepartment().setEnabled(true);
        pOnsiteCourse.getTxtLocation().setEditable(true);
        pOnsiteCourse.getCbMonday().setEnabled(true);
        pOnsiteCourse.getCbTuesday().setEnabled(true);
        pOnsiteCourse.getCbWednesday().setEnabled(true);
        pOnsiteCourse.getCbThursday().setEnabled(true);
        pOnsiteCourse.getCbFriday().setEnabled(true);
        pOnsiteCourse.getCbSaturday().setEnabled(true);
        pOnsiteCourse.getSpinnerTime().setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pHeader = new javax.swing.JPanel();
        lblDialogTitle = new javax.swing.JLabel();
        pMain = new javax.swing.JPanel();
        pChooseType = new javax.swing.JPanel();
        lblChooseType = new javax.swing.JLabel();
        cbCourseType = new javax.swing.JComboBox<>();
        btnGoToCourseInfo = new javax.swing.JButton();
        pOnlineCourseInfo = new javax.swing.JPanel();
        pOnlineCourse = new com.mycompany.coursemanagement.GUI.PnOnlineCourse();
        btnBack1 = new javax.swing.JButton();
        btnAddOnlineCourse = new javax.swing.JButton();
        pOnsiteCourseInfo = new javax.swing.JPanel();
        pOnsiteCourse = new com.mycompany.coursemanagement.GUI.PnOnsiteCourse();
        btnBack2 = new javax.swing.JButton();
        btnAddOnsiteCourse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Course");
        setResizable(false);

        pHeader.setBackground(new java.awt.Color(204, 255, 255));
        pHeader.setPreferredSize(new java.awt.Dimension(500, 60));
        pHeader.setLayout(new java.awt.BorderLayout());

        lblDialogTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblDialogTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDialogTitle.setText("Add course");
        lblDialogTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pHeader.add(lblDialogTitle, java.awt.BorderLayout.CENTER);

        getContentPane().add(pHeader, java.awt.BorderLayout.NORTH);

        pMain.setBackground(new java.awt.Color(255, 255, 255));
        pMain.setPreferredSize(new java.awt.Dimension(500, 384));
        pMain.setLayout(new java.awt.CardLayout());

        pChooseType.setBackground(new java.awt.Color(255, 255, 255));
        pChooseType.setPreferredSize(new java.awt.Dimension(500, 510));
        pChooseType.setRequestFocusEnabled(false);

        lblChooseType.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblChooseType.setText("Choose course type:");

        cbCourseType.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        btnGoToCourseInfo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnGoToCourseInfo.setText("Next");
        btnGoToCourseInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToCourseInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pChooseTypeLayout = new javax.swing.GroupLayout(pChooseType);
        pChooseType.setLayout(pChooseTypeLayout);
        pChooseTypeLayout.setHorizontalGroup(
            pChooseTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChooseTypeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGoToCourseInfo)
                .addContainerGap())
            .addGroup(pChooseTypeLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(pChooseTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCourseType, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChooseType))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        pChooseTypeLayout.setVerticalGroup(
            pChooseTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChooseTypeLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(lblChooseType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCourseType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(btnGoToCourseInfo)
                .addContainerGap())
        );

        pMain.add(pChooseType, "pChooseType");

        pOnlineCourseInfo.setBackground(new java.awt.Color(255, 255, 255));
        pOnlineCourseInfo.setPreferredSize(new java.awt.Dimension(500, 510));
        pOnlineCourseInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pOnlineCourseInfo.add(pOnlineCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 500, 250));

        btnBack1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        pOnlineCourseInfo.add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 353, -1, -1));

        btnAddOnlineCourse.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnAddOnlineCourse.setText("Finish");
        btnAddOnlineCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOnlineCourseActionPerformed(evt);
            }
        });
        pOnlineCourseInfo.add(btnAddOnlineCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 353, -1, -1));

        pMain.add(pOnlineCourseInfo, "pOnlineCourseInfo");

        pOnsiteCourseInfo.setBackground(new java.awt.Color(255, 255, 255));
        pOnsiteCourseInfo.setPreferredSize(new java.awt.Dimension(500, 510));
        pOnsiteCourseInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pOnsiteCourseInfo.add(pOnsiteCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        btnBack2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });
        pOnsiteCourseInfo.add(btnBack2, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 356, -1, -1));

        btnAddOnsiteCourse.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnAddOnsiteCourse.setText("Finish");
        btnAddOnsiteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOnsiteCourseActionPerformed(evt);
            }
        });
        pOnsiteCourseInfo.add(btnAddOnsiteCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 356, -1, -1));

        pMain.add(pOnsiteCourseInfo, "pOnsiteCourseInfo");

        getContentPane().add(pMain, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoToCourseInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToCourseInfoActionPerformed
        // TODO add your handling code here:
        switch (String.valueOf(cbCourseType.getSelectedItem())) {
            case CB_VALUE_ONLINE_COURSE:
                layout.show(pMain, "pOnlineCourseInfo");
                break;
            case CB_VALUE_ONSITE_COURSE:
                layout.show(pMain, "pOnsiteCourseInfo");
                break;
            default:
        }
    }//GEN-LAST:event_btnGoToCourseInfoActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        layout.show(pMain, "pChooseType");
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        layout.show(pMain, "pChooseType");
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void btnAddOnlineCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOnlineCourseActionPerformed
        // TODO add your handling code here:
        String courseId = pOnlineCourse.getTxtCourseId().getText().trim();
        String title = pOnlineCourse.getTxtTitle().getText().trim();
        String credits = pOnlineCourse.getTxtCredits().getText().trim();
        Department department = pOnlineCourse.getDepartment();
        String url = pOnlineCourse.getTxtUrl().getText().trim();
        int result;
        try {
            result = onlineCourseBUS.addCourse(courseId, title, credits, department, url);
        } catch (EmptyFieldException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            if (e.getFieldName().equalsIgnoreCase("courseId")) {
                pOnlineCourse.getTxtCourseId().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("title")) {
                pOnlineCourse.getTxtTitle().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("credits")) {
                pOnlineCourse.getTxtCredits().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("department")) {
                pOnlineCourse.getBtnChooseDepartment().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("url")) {
                pOnlineCourse.getTxtUrl().requestFocus();
            }
            return;
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occured, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }

        if (result > 0) {
            pOnlineCourse.clearAllInput();
            if (parent instanceof PnCourse) {
                PnCourse p = (PnCourse) parent;
                p.getCourseList(p.getQuery());
            }
            JOptionPane.showMessageDialog(this, "Course " + title + " (" + courseId + ") successfully added");
        } else {
            JOptionPane.showMessageDialog(this, "An error occured, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddOnlineCourseActionPerformed

    private void btnAddOnsiteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOnsiteCourseActionPerformed
        // TODO add your handling code here:
        String courseId = pOnsiteCourse.getTxtCourseId().getText().trim();
        String title = pOnsiteCourse.getTxtTitle().getText().trim();
        String credits = pOnsiteCourse.getTxtCredits().getText().trim();
        Department department = pOnsiteCourse.getDepartment();
        String location = pOnsiteCourse.getTxtLocation().getText().trim();
        boolean[] days = {pOnsiteCourse.getCbMonday().isSelected(), pOnsiteCourse.getCbTuesday().isSelected(),
            pOnsiteCourse.getCbWednesday().isSelected(), pOnsiteCourse.getCbThursday().isSelected(),
            pOnsiteCourse.getCbFriday().isSelected(), pOnsiteCourse.getCbSaturday().isSelected()};
        String time = pOnsiteCourse.getTxtTime().getText().trim();
        int result;
        try {
            result = onsiteCourseBUS.addCourse(courseId, title, credits, department, location, days, time);
        } catch (EmptyFieldException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            if (e.getFieldName().equalsIgnoreCase("courseId")) {
                pOnsiteCourse.getTxtCourseId().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("title")) {
                pOnsiteCourse.getTxtTitle().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("credits")) {
                pOnsiteCourse.getTxtCredits().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("department")) {
                pOnsiteCourse.getBtnChooseDepartment().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("location")) {
                pOnsiteCourse.getTxtLocation().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("days")) {
                pOnsiteCourse.getCbMonday().requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("time")) {
                pOnsiteCourse.getSpinnerTime().requestFocus();
            }
            return;
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occured, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }

        if (result > 0) {
            pOnsiteCourse.clearAllInput();
            if (parent instanceof PnCourse) {
                PnCourse p = (PnCourse) parent;
                p.getCourseList(p.getQuery());
            }
            JOptionPane.showMessageDialog(this, "Course " + title + " (" + courseId + ") successfully added");
        } else {
            JOptionPane.showMessageDialog(this, "An error occured, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddOnsiteCourseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogAddCourse dialog = new DialogAddCourse(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOnlineCourse;
    private javax.swing.JButton btnAddOnsiteCourse;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnGoToCourseInfo;
    private javax.swing.JComboBox<String> cbCourseType;
    private javax.swing.JLabel lblChooseType;
    private javax.swing.JLabel lblDialogTitle;
    private javax.swing.JPanel pChooseType;
    private javax.swing.JPanel pHeader;
    private javax.swing.JPanel pMain;
    private com.mycompany.coursemanagement.GUI.PnOnlineCourse pOnlineCourse;
    private javax.swing.JPanel pOnlineCourseInfo;
    private com.mycompany.coursemanagement.GUI.PnOnsiteCourse pOnsiteCourse;
    private javax.swing.JPanel pOnsiteCourseInfo;
    // End of variables declaration//GEN-END:variables
}
