/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.coursemanagement.GUI.CourseInstructor;

import com.mycompany.coursemanagement.BUS.CourseInstructorBUS;
import com.mycompany.coursemanagement.Models.Course;
import com.mycompany.coursemanagement.Models.CourseInstructor;
import com.mycompany.coursemanagement.Models.Person;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author PC
 */
public class PnCourseInstructor extends javax.swing.JPanel {

    private CourseInstructorBUS courseInstructorBUS = new CourseInstructorBUS();
    private List<CourseInstructor> list;

    public PnCourseInstructor() {
        initComponents();
        this.setSize(885, 515);
        this.list = new ArrayList<>();
        rdSortByTeacher.setSelected(true);
        SetUpTable();
        LoadCourseInstructor(rdSortByTeacher.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblInstructor = new javax.swing.JTable();
        txtFindContent = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnReload = new javax.swing.JButton();
        rdSortByTeacher = new javax.swing.JRadioButton();

        setPreferredSize(new java.awt.Dimension(880, 510));

        tblInstructor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Teacher ID", "Teacher Name", "Course ID", "Course Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInstructor);
        if (tblInstructor.getColumnModel().getColumnCount() > 0) {
            tblInstructor.getColumnModel().getColumn(0).setResizable(false);
            tblInstructor.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblInstructor.getColumnModel().getColumn(1).setResizable(false);
            tblInstructor.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblInstructor.getColumnModel().getColumn(2).setResizable(false);
            tblInstructor.getColumnModel().getColumn(2).setPreferredWidth(20);
            tblInstructor.getColumnModel().getColumn(3).setResizable(false);
            tblInstructor.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        btnFind.setText("Find");

        btnDelete.setText("Delete");

        btnEdit.setText("Edit");

        btnAdd.setText("Add");

        btnView.setText("View");

        btnReload.setText("Reload");

        rdSortByTeacher.setText("Sort By Teacher");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFindContent, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdSortByTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFindContent)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdSortByTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    public void SetUpTable() {
        for (int i = 0; i < tblInstructor.getColumnCount(); i++) {
            tblInstructor.getColumnModel().getColumn(i).setCellRenderer(new LeftAlignedCellRenderer());
        }
    }

    public void LoadCourseInstructor(boolean sortByTeacher) {
        try {
            this.list = courseInstructorBUS.Get();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured when Get Data in Database, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            return;
        }
        if (sortByTeacher = true) {
            Collections.sort(this.list, Comparator.comparingInt(CourseInstructor::getPersonID));
        } else {
            Collections.sort(this.list, Comparator.comparingInt(CourseInstructor::getCourseID));
        }
        DefaultTableModel tableModel = (DefaultTableModel) tblInstructor.getModel();
        tableModel.setRowCount(0);
        try {
            for (CourseInstructor ci : this.list) {
                int TeacherID = ci.getPersonID();
                int CourseID = ci.getCourseID();
                Course course = courseInstructorBUS.GetCourseByID(CourseID);
                Person Teacher = courseInstructorBUS.GetTeacherByID(TeacherID);
                String TeacherName = Teacher.getFirstName() + Teacher.getLastName();
                Object[] row = {TeacherID, TeacherName, CourseID, course.getTitle()};
                tableModel.addRow(row);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured when Load Data to GUI, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            tableModel.setRowCount(0);
            return;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdSortByTeacher;
    private javax.swing.JTable tblInstructor;
    private javax.swing.JTextField txtFindContent;
    // End of variables declaration//GEN-END:variables
}

class LeftAlignedCellRenderer extends DefaultTableCellRenderer {

    public LeftAlignedCellRenderer() {
        setHorizontalAlignment(SwingConstants.LEFT); // Đặt căn chỉnh sang trái
    }
}

